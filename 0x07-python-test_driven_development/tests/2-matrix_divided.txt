The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------
Checking docstring for module:
        >>> __import__('2-matrix_divided').__doc__ != None
        True

Import ``matrix_divided`` from the ``2-matrix_divided`` module:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check docstring for function:
        >>> len(matrix_divided.__doc__) > 0
        True

Checking normal values:
        >>> matrix = [[1, 2, 3], [4, 5, 6]]
        >>> print(matrix_divided(matrix, 3))
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
        >>> print(matrix) # checks if your return a new matrix
        [[1, 2, 3], [4, 5, 6]]

Checking division by negative float:
        >>> print(matrix_divided(matrix, -2.1))
        [[-0.48, -0.95, -1.43], [-1.9, -2.38, -2.86]]

Checking by a matrix with 1 element:
        >>> print(matrix_divided([[1]], 2))
        [[0.5]]

Calling the function with 1 argument:
        >>> matrix_divided(1)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

Calling the function with more than the 2 arguments:
        >>> matrix_divided(1, 2, 3)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Calling the function with matrix lists with different sizes:
	>>> matrix_divided([[1, 2, 3], [2, 3, 4, 5]], 6)
   	Traceback (most recent call last):
		...
   	TypeError: Each row of the matrix must have the same size

Calling the function with an empty matrix:
	>>> matrix_divided([], 6)
   	Traceback (most recent call last):
		...
   	TypeError: matrix must be a matrix (list of lists) of integers/floats

Calling the function with div as zero:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    	Traceback (most recent call last):
		...
    	ZeroDivisionError: division by zero

Calling the function with div not as int or float:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Hello")
	Traceback (most recent call last):
    	TypeError: div must be a number

Calling the function converting div to inf float:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


Calling the function with div as a long int:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 6234864238764)
    	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]